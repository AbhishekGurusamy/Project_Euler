#include <iostream>
#include <chrono>

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

int main()
{
    long n1 = 2, n2 = 3, answer{};
    /*
    Adding even numbers only for fibonacci.
    */
    auto start = std::chrono::high_resolution_clock::now();

    while (n1 <= 4000000)
    {
        answer += n1;
        n1 += n2;
        n2 += n1 + n1;
        n1 = n2 - n1;
    }
    auto stop = std::chrono::high_resolution_clock::now();

    std::cout << "Answer:" << answer;

    auto duration = std::chrono::duration_cast<std::chrono::nanoseconds>(stop - start);
    std::cout << "\nNano seconds:" << duration.count();
    std::cout << "\nSeconds:" << duration.count() * 1e-9;
    return 0;
}